version: '{build}'

platform:
  - x86
  - amd64
  - arm
  - arm64

configuration:
  - Debug
  - Release

environment:
  global:
    MSVC_DEFAULT_OPTIONS: ON

  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      toolset: clangcl
      cpp_version: 14
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      toolset: clangcl
      cpp_version: 14
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      toolset: clangcl
      cpp_version: 17
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      toolset: msvc-v140
      cpp_version: 14
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      toolset: msvc-v141
      cpp_version: 14
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      toolset: msvc-v141
      cpp_version: 17
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      toolset: msvc-v142
      cpp_version: 14
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      toolset: msvc-v142
      cpp_version: 17
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      toolset: msvc-v142
      cpp_version: 20
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
      toolset: msvc-v142
      cpp_version: 14
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
      toolset: msvc-v142
      cpp_version: 17
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
      toolset: msvc-v142
      cpp_version: 20
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1604
      cc: gcc
      cxx: g++
      cpp_version: 11
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1604
      cc: gcc
      cxx: g++
      cpp_version: 14
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1604
      cc: gcc
      cxx: g++
      cpp_version: 17
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1604
      cc: clang
      cxx: clang++
      cpp_version: 11
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1604
      cc: clang
      cxx: clang++
      cpp_version: 14
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1604
      cc: clang
      cxx: clang++
      cpp_version: 17

matrix:
  exclude:
    - platform: arm
      toolset: clangcl
    - platform: arm64
      toolset: clangcl
    - platform: arm
      toolset: msvc-v140
    - platform: arm64
      toolset: msvc-v140
    - platform: x86
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1604
    - platform: arm
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1604
    - platform: arm64
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1604

branches:
  only:
    - master

init:

install:
  - git submodule update --init --recursive

build_script:
  - ps: |
      mkdir build
      pushd build
      if ($isWindows) {
        Write-Host "Invoking CMake with toolchain 'win-$env:platform-$env:toolset-toolchain.cmake'"
        cmake -G "Ninja" -DCMAKE_TOOLCHAIN_FILE="..\.ci\cmake\win-$env:platform-$env:toolset-toolchain.cmake" -DCPPPAL_CXX_STANDARD="$env:cpp_version" ..
        $toolset = ""
        if ($env:toolset -eq "msvc-v143") {
          $toolset = @{toolset = "14.3"}
        } elseif ($env:toolset -eq "msvc-v142") {
          $toolset = @{toolset = "14.2"}
        } elseif ($env:toolset -eq "msvc-v141") {
          $toolset = @{toolset = "14.1"}
        } elseif ($env:toolset -eq "msvc-v140") {
          $toolset = @{toolset = "14.0"}
        }
        Write-Host "Setting up compilation environment 'Setup-VSEnv.ps1 -architecture $env:platform @toolset'"
        ..\.ci\Setup-VSEnv.ps1 -architecture $env:platform @toolset
        cmake --build .
      } elseif ($isLinux) {
        cmake -G "Ninja" -D CMAKE_C_COMPILER=$env:cc -D CMAKE_CXX_COMPILER=$env:cxx -DCPPPAL_CXX_STANDARD="$env:cpp_version" ..
        cmake --build .
      }
      popd

for:
  - matrix:
      except:
        - platform: arm
        - platform: arm64
    test_script:
      - ps: build/tests/cpppal_tests

on_finish:
  # Tap in for debug CMake problems
  #- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
